/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.ControladorGenero;
import Controlador.ControladorHistorial;
import Controlador.ControladorLibro;
import Excepciones.AnioSobrepasadoException;
import Excepciones.CantidadSobrepasadaException;
import Excepciones.LibroNoEncontradoException;
import Modelo.Historiales;
import Modelo.Libro;
import Modelo.Usuario;
import Singleton.DatabaseSingleton;
import Vista.TextPromt.TextPrompt;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mariadb.jdbc.Connection;

/**
 *
 * @author sotog
 */
public class VistaLibro extends javax.swing.JFrame {

    Usuario usuario;
    ControladorLibro controladorLibro;
    Controlador.ControladorGenero controGenero;
    ControladorHistorial controH;
    private Connection con;

    /**
     * Creates new form VistaLibro
     */
    public VistaLibro(Usuario usuario) {
        initComponents();
        setLocationRelativeTo(this);
        TextPrompt pHUsuario = new TextPrompt("Ingrese la cantidad de copias: ", txtCantidadCopias);
        TextPrompt pHUsuarioss = new TextPrompt("Ingrese el a√±o de publicacion : ", txtAnioPublicacion);
        TextPrompt pHUsuariosss = new TextPrompt("Ingrese el nombre del autor: ", txtAutor);
        TextPrompt pHUsuariossss = new TextPrompt("Ingrese el id: ", txtId);
        TextPrompt pHUsuariosssss = new TextPrompt("Ingrese el nombre: ", txtNombre);

        this.usuario = usuario;

        controladorLibro = new ControladorLibro();
        controGenero = new ControladorGenero();
        controH = new ControladorHistorial();
        con = (Connection) DatabaseSingleton.getInstance().getConnection();
        lblAnioPublicacion.setVisible(false);
        lblAutor.setVisible(false);
        lbNombre.setVisible(false);
        lblCantidad.setVisible(false);
        lblId.setVisible(false);
        llenarTabla();
        cargarComboFiltro();
        cargarCombo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        txtId = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        txtAutor = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        lblAutor = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        lblAnioPublicacion = new javax.swing.JLabel();
        comboGenero = new javax.swing.JComboBox<>();
        lblGenero = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        txtAnioPublicacion = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCantidadCopias = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnEliminarCantidad = new javax.swing.JButton();
        comboFiltro = new javax.swing.JComboBox<>();
        btnFiltrar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(4, 13, 18));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(24, 61, 61));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/bookshelf-in-library-vector.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabel2)
                .addContainerGap(233, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(147, 177, 166));
        jLabel1.setText("Ingresa la informacion del libro:");

        btnInsertar.setBackground(new java.awt.Color(24, 61, 61));
        btnInsertar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnInsertar.setForeground(new java.awt.Color(147, 177, 166));
        btnInsertar.setText("Insertar");
        btnInsertar.setActionCommand("Inicio");
        btnInsertar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnInsertarMouseMoved(evt);
            }
        });
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(147, 177, 166));

        txtId.setBackground(new java.awt.Color(4, 13, 18));
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setBorder(null);
        txtId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdMouseClicked(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(147, 177, 166));

        txtAutor.setBackground(new java.awt.Color(4, 13, 18));
        txtAutor.setForeground(new java.awt.Color(255, 255, 255));
        txtAutor.setBorder(null);
        txtAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAutorKeyTyped(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(147, 177, 166));

        jSeparator5.setBackground(new java.awt.Color(147, 177, 166));

        jSeparator6.setBackground(new java.awt.Color(147, 177, 166));

        btnModificar.setBackground(new java.awt.Color(24, 61, 61));
        btnModificar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(147, 177, 166));
        btnModificar.setText("Modificar");
        btnModificar.setActionCommand("Inicio");
        btnModificar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnModificarMouseMoved(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(24, 61, 61));
        btnEliminar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(147, 177, 166));
        btnEliminar.setText("Eliminar");
        btnEliminar.setActionCommand("Inicio");
        btnEliminar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEliminarMouseMoved(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(24, 61, 61));
        btnBuscar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(147, 177, 166));
        btnBuscar.setText("Q");
        btnBuscar.setActionCommand("Inicio");
        btnBuscar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnBuscarMouseMoved(evt);
            }
        });
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblId.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        lblId.setForeground(new java.awt.Color(147, 177, 166));
        lblId.setText("Id:");

        lblAutor.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        lblAutor.setForeground(new java.awt.Color(147, 177, 166));
        lblAutor.setText("Autor:");

        lbNombre.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        lbNombre.setForeground(new java.awt.Color(147, 177, 166));
        lbNombre.setText("Nombre:");

        lblCantidad.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        lblCantidad.setForeground(new java.awt.Color(147, 177, 166));
        lblCantidad.setText("Cantidad de copias:");

        lblAnioPublicacion.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        lblAnioPublicacion.setForeground(new java.awt.Color(147, 177, 166));
        lblAnioPublicacion.setText("A√±o de publicacion:");

        comboGenero.setBackground(new java.awt.Color(4, 13, 18));
        comboGenero.setForeground(new java.awt.Color(255, 255, 255));
        comboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblGenero.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        lblGenero.setForeground(new java.awt.Color(147, 177, 166));
        lblGenero.setText("Genero:");

        tabla.setBackground(new java.awt.Color(147, 177, 166));
        tabla.setForeground(new java.awt.Color(0, 0, 0));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        txtAnioPublicacion.setBackground(new java.awt.Color(4, 13, 18));
        txtAnioPublicacion.setForeground(new java.awt.Color(255, 255, 255));
        txtAnioPublicacion.setBorder(null);
        txtAnioPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnioPublicacionActionPerformed(evt);
            }
        });
        txtAnioPublicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnioPublicacionKeyTyped(evt);
            }
        });

        txtNombre.setBackground(new java.awt.Color(4, 13, 18));
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.setBorder(null);

        txtCantidadCopias.setBackground(new java.awt.Color(4, 13, 18));
        txtCantidadCopias.setForeground(new java.awt.Color(255, 255, 255));
        txtCantidadCopias.setBorder(null);
        txtCantidadCopias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadCopiasKeyTyped(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(24, 61, 61));
        btnLimpiar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(147, 177, 166));
        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.setActionCommand("Inicio");
        btnLimpiar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseMoved(evt);
            }
        });
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminarCantidad.setBackground(new java.awt.Color(24, 61, 61));
        btnEliminarCantidad.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnEliminarCantidad.setForeground(new java.awt.Color(147, 177, 166));
        btnEliminarCantidad.setText("Eliminar por cantidad");
        btnEliminarCantidad.setActionCommand("Inicio");
        btnEliminarCantidad.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEliminarCantidadMouseMoved(evt);
            }
        });
        btnEliminarCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCantidadActionPerformed(evt);
            }
        });

        comboFiltro.setBackground(new java.awt.Color(4, 13, 18));
        comboFiltro.setForeground(new java.awt.Color(255, 255, 255));
        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFiltroActionPerformed(evt);
            }
        });

        btnFiltrar.setBackground(new java.awt.Color(24, 61, 61));
        btnFiltrar.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(147, 177, 166));
        btnFiltrar.setText("Filtrar");
        btnFiltrar.setActionCommand("Inicio");
        btnFiltrar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnFiltrarMouseMoved(evt);
            }
        });
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidadCopias, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator4)
                                .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAnioPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtAnioPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator5)
                                    .addComponent(comboGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(68, 68, 68))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(btnFiltrar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(btnLimpiar)
                                .addGap(18, 18, 18)
                                .addComponent(btnInsertar)
                                .addGap(33, 33, 33)
                                .addComponent(btnModificar)
                                .addGap(31, 31, 31)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminarCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(lblAutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(lblAnioPublicacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAnioPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblCantidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidadCopias, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGenero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnEliminarCantidad))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("M√°s");

        jMenuItem1.setText("Volver");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Cerrar sesi√≥n");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertarMouseMoved
        // TODO add your handling code here:
        btnInsertar.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnInsertarMouseMoved

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        // TODO add your handling code here:
        if (txtAnioPublicacion.getText().isEmpty() || txtAutor.getText().isEmpty() || txtCantidadCopias.getText().isEmpty() || txtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Por favor llene los campos");
        } else {
            int id = Integer.parseInt(txtId.getText());
            String nombre = txtNombre.getText();
            int cantidadCopias = Integer.parseInt(txtCantidadCopias.getText());
            int anioPublicacion = Integer.parseInt(txtAnioPublicacion.getText());
            String Autor = txtAutor.getText();
            String genero = (String) comboGenero.getSelectedItem();
            try {
                int id_genero = controGenero.buscarIDGenero(genero);
                Libro libro = new Libro(id, nombre, Autor, anioPublicacion, cantidadCopias, id_genero);

                controladorLibro.agregarLibro(libro);
                JOptionPane.showMessageDialog(null, "Libro guardado");

                String accion = "Se guardo un libro con id: " + libro.getId();
                LocalDate fechaActual = LocalDate.now();
                LocalTime horaActual = LocalTime.now();
                Usuario id_usuar = controH.buscarUsuarioPorCedula(usuario.getCedula());
                int usuario = id_usuar.getCedula();
                Historiales historial = new Historiales(0, fechaActual, horaActual, accion, accion, usuario);
                controH.agregarRegistroHistorial(historial);
                llenarTabla();
                limpiarCampo();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al guardar");
            } catch (AnioSobrepasadoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }

    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnModificarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseMoved
        // TODO add your handling code here:
        btnModificar.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnModificarMouseMoved

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        if (txtAnioPublicacion.getText().isEmpty() || txtAutor.getText().isEmpty() || txtCantidadCopias.getText().isEmpty() || txtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Por favor llene los campos");
        } else {
            int id = Integer.parseInt(txtId.getText());
            String nombre = txtNombre.getText();
            int cantidadCopias = Integer.parseInt(txtCantidadCopias.getText());
            int anioPublicacion = Integer.parseInt(txtAnioPublicacion.getText());
            String Autor = txtAutor.getText();
            String genero = (String) comboGenero.getSelectedItem();
            try {
                int id_genero = controGenero.buscarIDGenero(genero);

                controladorLibro.editarLibro(id, nombre, Autor, anioPublicacion, cantidadCopias, id_genero);
                JOptionPane.showMessageDialog(null, "Libro modificado");
                LocalDate fechaActual = LocalDate.now();
                LocalTime horaActual = LocalTime.now();
                Usuario id_usuar = controH.buscarUsuarioPorCedula(usuario.getCedula());
                int usuarioss = id_usuar.getCedula();
                int fila = tabla.getSelectedRow();
                llenarTabla();
                
                String accion = "Se modifico un libro con id: " + tabla.getValueAt(fila, 0).toString();
                Historiales historial = new Historiales(0, fechaActual, horaActual, usuario.getNombre(), accion, usuarioss);
                controH.agregarRegistroHistorial(historial);
                lblAnioPublicacion.setVisible(false);
                lblAutor.setVisible(false);
                lbNombre.setVisible(false);
                lblCantidad.setVisible(false);
                lblId.setVisible(false);
                txtId.setEditable(true);
                llenarTabla();
                limpiarCampo();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al modificar");
            } catch (AnioSobrepasadoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseMoved
        // TODO add your handling code here:
        btnEliminar.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnEliminarMouseMoved

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ingrese el id que quiere eliminar");
        }
        try {
            int id = Integer.parseInt(txtId.getText());
            controladorLibro.eliminarLibro(id);
            JOptionPane.showMessageDialog(null, "Libro Eliminado");
            LocalDate fechaActual = LocalDate.now();
            LocalTime horaActual = LocalTime.now();
            Usuario id_usuar = controH.buscarUsuarioPorCedula(usuario.getCedula());
            int usuarioss = id_usuar.getCedula();
            int fila = tabla.getSelectedRow();

            String accion = "Se elimino un libro con id: " + tabla.getValueAt(fila, 0).toString();
            Historiales historial = new Historiales(0, fechaActual, horaActual, usuario.getNombre(), accion, usuarioss);
            controH.agregarRegistroHistorial(historial);
            txtId.setEditable(true);
            lblAnioPublicacion.setVisible(false);
            lblAutor.setVisible(false);
            lbNombre.setVisible(false);
            lblCantidad.setVisible(false);
            lblId.setVisible(false);
            llenarTabla();
            limpiarCampo();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Eliminar");
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseMoved
        // TODO add your handling code here:
        btnBuscar.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnBuscarMouseMoved

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ingrese el ID del libro");
        } else {
            int id = Integer.parseInt(txtId.getText());

            try {
                Libro libroEncontrado = controladorLibro.buscarLibro(id);

                if (libroEncontrado == null) {
                    throw new LibroNoEncontradoException();
                }
                txtId.setEditable(false);
                lblAnioPublicacion.setVisible(true);
                lblAutor.setVisible(true);
                lbNombre.setVisible(true);
                lblCantidad.setVisible(true);
                txtId.setEditable(false);
                lblId.setVisible(true);
                txtNombre.setText(libroEncontrado.getNombre());
                txtAnioPublicacion.setText(String.valueOf(libroEncontrado.getAnioPublicacion()));
                txtAutor.setText(libroEncontrado.getAutor());
                txtCantidadCopias.setText(String.valueOf(libroEncontrado.getCantidadCopias()));
                txtId.setText(String.valueOf(libroEncontrado.getId()));
                comboGenero.setSelectedIndex(libroEncontrado.getIdGenero());

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al buscar");
            } catch (LibroNoEncontradoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        btnInsertar.setForeground(Color.lightGray);
        btnBuscar.setForeground(Color.lightGray);
        btnEliminar.setForeground(Color.lightGray);
        btnModificar.setForeground(Color.lightGray);
        btnLimpiar.setForeground(Color.lightGray);
        btnEliminarCantidad.setForeground(Color.lightGray);
        btnFiltrar.setForeground(Color.lightGray);

    }//GEN-LAST:event_jPanel1MouseMoved

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new VistaMenu(usuario).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
         try {

            LocalDate fechaActual = LocalDate.now();
            LocalTime horaActual = LocalTime.now();
            Usuario id_usuar = controH.buscarUsuarioPorCedula(usuario.getCedula());
            int usuarioss = id_usuar.getCedula();

            String accion = "Cerr√≥ sesi√≥n una persona con cedula: " + usuario.getCedula();
            Historiales historial = new Historiales(0, fechaActual, horaActual, usuario.getNombre(), accion, usuarioss);
            controH.agregarRegistroHistorial(historial);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "error al generar acci√≥n");
        }
        new VistaLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void txtAnioPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnioPublicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnioPublicacionActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_txtIdKeyTyped

    private void txtAnioPublicacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnioPublicacionKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_txtAnioPublicacionKeyTyped

    private void txtCantidadCopiasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadCopiasKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_txtCantidadCopiasKeyTyped

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        int seleccionado = tabla.getSelectedRow();
        lblAnioPublicacion.setVisible(true);
        lblAutor.setVisible(true);
        lbNombre.setVisible(true);
        lblCantidad.setVisible(true);
        lblId.setVisible(true);
        txtId.setEditable(false);
        txtId.setText(tabla.getValueAt(seleccionado, 0).toString());
        txtNombre.setText(tabla.getValueAt(seleccionado, 1).toString());
        txtAutor.setText(tabla.getValueAt(seleccionado, 2).toString());
        txtAnioPublicacion.setText(tabla.getValueAt(seleccionado, 3).toString());
        txtCantidadCopias.setText(tabla.getValueAt(seleccionado, 4).toString());
        comboGenero.setSelectedItem(tabla.getValueAt(seleccionado, 5).toString());


    }//GEN-LAST:event_tablaMouseClicked

    private void txtAutorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAutorKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresar solo letras");
        }
    }//GEN-LAST:event_txtAutorKeyTyped

    private void txtIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdMouseClicked
        // TODO add your handling code here:
        if (!txtId.isEditable()) {
            JOptionPane.showMessageDialog(null, "Este campo no se puede editar.", "Campo no editable", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtIdMouseClicked

    private void btnLimpiarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseMoved
        // TODO add your handling code here:
        btnLimpiar.setForeground(Color.WHITE);

    }//GEN-LAST:event_btnLimpiarMouseMoved

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        lblAnioPublicacion.setVisible(false);
        lblAutor.setVisible(false);
        lbNombre.setVisible(false);
        lblCantidad.setVisible(false);
        lblId.setVisible(false);
        txtId.setEditable(true);
        txtAnioPublicacion.setText("");
        txtAutor.setText("");
        txtCantidadCopias.setText("");
        txtId.setText("");
        txtNombre.setText("");
        comboGenero.setSelectedIndex(0);


    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarCantidadMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarCantidadMouseMoved
        // TODO add your handling code here:
        btnEliminarCantidad.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnEliminarCantidadMouseMoved

    private void btnEliminarCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCantidadActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().isEmpty() || txtCantidadCopias.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "busque el libro que desea eliminar");
        } else {
            int id = Integer.parseInt(txtId.getText());
            int cantidadTotal = Integer.parseInt(txtCantidadCopias.getText());
            try {
                int cantidad = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la cantidad que desea eliminar"));
                controladorLibro.eliminarLibroCantidad(id, cantidad, cantidadTotal);
                JOptionPane.showMessageDialog(null, "cantidad modificada");
                txtId.setEditable(true);
                llenarTabla();
                limpiarCampo();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese un n√∫mero v√°lido");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Eliminar");
                System.out.println(ex.toString());
            } catch (CantidadSobrepasadaException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnEliminarCantidadActionPerformed

    private void btnFiltrarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFiltrarMouseMoved
        // TODO add your handling code here:
        btnFiltrar.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnFiltrarMouseMoved

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        if (comboFiltro.getSelectedIndex() == 0) {
            llenarTabla();
        } else {
            String genero = comboFiltro.getSelectedItem().toString();
            llenarTablaFiltro(genero);
        }
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void comboFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboFiltroActionPerformed
    public void llenarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            ArrayList<Libro> lista = controladorLibro.listaLibros();

            modelo.setColumnIdentifiers(new Object[]{"ID", "nombre", "autor", "anipPublicacion", "cantidadCopias", "cantidadDisponibles", "cantidadPrestada", "generos"});
            tabla.setModel(modelo);

            for (int i = 0; i < lista.size(); i++) {
                Libro libro = lista.get(i);
                modelo.addRow(new Object[]{
                    libro.getId(),
                    libro.getNombre(),
                    libro.getAutor(),
                    libro.getAnioPublicacion(),
                    libro.getCantidadCopias(),
                    libro.getCantidadDisponible(),
                    libro.getCantidadPrestadas(),
                    libro.getNombreGenero()

                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void llenarTablaFiltro(String generoSeleccionado) {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            ArrayList<Libro> lista = controladorLibro.listaLibros();

            modelo.setColumnIdentifiers(new Object[]{"ID", "nombre", "autor", "anipPublicacion", "cantidadCopias", "cantidadDisponibles", "cantidadPrestada", "generos"});
            tabla.setModel(modelo);

            for (int i = 0; i < lista.size(); i++) {
                Libro libro = lista.get(i);

                // Verifica si el libro coincide con el g√©nero seleccionado
                if (libro.getNombreGenero().equals(generoSeleccionado)) {
                    modelo.addRow(new Object[]{
                        libro.getId(),
                        libro.getNombre(),
                        libro.getAutor(),
                        libro.getAnioPublicacion(),
                        libro.getCantidadCopias(),
                        libro.getCantidadDisponible(),
                        libro.getCantidadPrestadas(),
                        libro.getNombreGenero()
                    });
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void cargarComboFiltro() {
        try {
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            comboFiltro.setModel(model);
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT * FROM generos";

            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            model.addElement("Seleccione un genero"); // Agrega la opci√≥n predeterminada

            while (rs.next()) {
                String categoryName = rs.getString("Nombre");
                model.addElement(categoryName);
            }

        } catch (SQLException ex) {
            System.err.print(ex.toString());
        }
    }

    public void cargarCombo() {
        try {
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            comboGenero.setModel(model);
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT * FROM generos";

            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            model.addElement("Seleccione un genero"); // Agrega la opci√≥n predeterminada

            while (rs.next()) {
                String categoryName = rs.getString("Nombre");
                model.addElement(categoryName);
            }

        } catch (SQLException ex) {
            System.err.print(ex.toString());
        }
    }

    public void limpiarCampo() {
        txtAnioPublicacion.setText("");
        txtAutor.setText("");
        txtCantidadCopias.setText("");
        txtId.setText("");
        txtNombre.setText("");
        comboGenero.setSelectedIndex(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarCantidad;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JComboBox<String> comboGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lblAnioPublicacion;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblId;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtAnioPublicacion;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtCantidadCopias;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
